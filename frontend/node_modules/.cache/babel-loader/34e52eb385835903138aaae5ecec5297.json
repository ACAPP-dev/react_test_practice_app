{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/react_test_practice_app/frontend/src/containers/TestContainer.js\";\nimport React from 'react';\nimport TestLoad from '../components/TestLoad';\nimport TestCard from '../components/TestCard';\nexport default class TestContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testSubject: \"\",\n      testDifficulty: \"\",\n      testLength: 0,\n      testQuestions: [],\n      testResult: []\n    };\n\n    this.handleTestData = data => {\n      this.setState({\n        testQuestions: data\n      });\n      this.setState({\n        testSubject: data[0].category,\n        testDifficulty: data[0].difficulty,\n        testLength: data.length\n      });\n      console.log('TestContainer State after fetch and create questions array:');\n      console.log(this.state);\n    };\n\n    this.createCards = () => {\n      return this.state.testQuestions.map((card, index) => {\n        return /*#__PURE__*/React.createElement(TestCard, {\n          returnAnswerClick: this.handleAnswerClick,\n          cardData: card,\n          questionIndex: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        });\n      });\n    };\n\n    this.handleAnswerClick = event => {\n      const questionNumber = event.target.getAttribute('data-question');\n      const submittedAnswer = event.target.getAttribute('data-answer');\n      const correctAnswer = this.state.testQuestions[event.target.getAttribute('data-question')].correct_answer;\n      const newTestResultArry = this.state.testResult;\n\n      if (submittedAnswer === correctAnswer) {\n        console.log('Correct Answer!');\n        newTestResultArry[questionNumber] = {\n          correct: 1,\n          answer: submittedAnswer\n        };\n        this.setState({\n          testResult: newTestResultArry\n        });\n        event.currentTarget.parentElement.classname = 'correct';\n      } else {\n        console.log('Incorrect Answer!!');\n        newTestResultArry[questionNumber] = {\n          correct: 0,\n          answer: submittedAnswer\n        };\n        this.setState({\n          testResult: newTestResultArry\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TestLoad, {\n      returnTestQuestionArry: this.handleTestData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, `Test Your Knowledge of: need from state`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/react_test_practice_app/frontend/src/containers/TestContainer.js"],"names":["React","TestLoad","TestCard","TestContainer","Component","state","testSubject","testDifficulty","testLength","testQuestions","testResult","handleTestData","data","setState","category","difficulty","length","console","log","createCards","map","card","index","handleAnswerClick","event","questionNumber","target","getAttribute","submittedAnswer","correctAnswer","correct_answer","newTestResultArry","correct","answer","currentTarget","parentElement","classname","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TestLoad from '../components/TestLoad'\nimport TestCard from '../components/TestCard'\n\nexport default class TestContainer extends React.Component {\n    \n    state = {\n        testSubject: \"\",\n        testDifficulty: \"\",\n        testLength: 0,\n        testQuestions: [],\n        testResult: []\n    }\n\n    handleTestData = (data) => {\n        this.setState({testQuestions: data})\n        this.setState({\n            testSubject: data[0].category,\n            testDifficulty: data[0].difficulty,\n            testLength: data.length\n        })\n        console.log('TestContainer State after fetch and create questions array:')\n        console.log(this.state)\n    }\n\n    createCards = () => {\n        return this.state.testQuestions.map((card, index) => {\n            \n            return (\n                < TestCard returnAnswerClick={this.handleAnswerClick} cardData={card} questionIndex={index} />\n            )\n        })\n    }\n\n    handleAnswerClick = (event) => {\n        const questionNumber = event.target.getAttribute('data-question')\n        const submittedAnswer = event.target.getAttribute('data-answer')\n        const correctAnswer = this.state.testQuestions[event.target.getAttribute('data-question')].correct_answer\n        const newTestResultArry = this.state.testResult\n\n        if (submittedAnswer === correctAnswer) {\n            console.log('Correct Answer!')\n            \n            newTestResultArry[questionNumber] = {\n                correct: 1,\n                answer: submittedAnswer\n            }\n\n            this.setState({testResult: newTestResultArry})\n            event.currentTarget.parentElement.classname = 'correct'\n        } else {\n            console.log('Incorrect Answer!!')\n            newTestResultArry[questionNumber] = {\n                correct: 0,\n                answer: submittedAnswer\n            }\n\n            this.setState({testResult: newTestResultArry})\n            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                < TestLoad returnTestQuestionArry={this.handleTestData} />\n                <h2>{`Test Your Knowledge of: need from state`}</h2>\n                <div>\n                    {/* {this.createCards()} */}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}