{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/react_test_practice_app/frontend/src/containers/TestContainer.js\";\nimport React from 'react';\nimport TestLoad from '../components/TestLoad';\nimport TestCard from '../components/TestCard';\nexport default class TestContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testSubject: \"\",\n      testDifficulty: \"\",\n      testLength: 0,\n      testQuestions: [],\n      testResult: []\n    };\n\n    this.handleTestData = (testQuestionArry, testSubject, testDifficulty, testLength) => {\n      this.setState({\n        testQuestions: testQuestionArry,\n        testSubject: testSubject,\n        testDifficulty: testDifficulty,\n        testLength: testLength\n      });\n      console.log('TestContainer State after fetch and create questions array:');\n      console.log(this.state);\n    };\n\n    this.createCards = () => {\n      return this.state.testQuestions.map((card, index) => {\n        return /*#__PURE__*/React.createElement(TestCard, {\n          returnAnswerClick: this.handleAnswerClick,\n          cardData: card,\n          questionIndex: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        });\n      });\n    };\n\n    this.handleAnswerClick = event => {\n      const questionNumber = event.target.getAttribute('data-question');\n      const submittedAnswer = event.target.getAttribute('data-answer');\n      console.log(`state testresult array element: ${this.state.testResult}`);\n\n      if (!!this.state.testResult[questionNumber]) {\n        const correctAnswerNumber = this.state.testQuestions[questionNumber].correctAnswerIndex;\n        const correctAnswer = this.state.testQuestions[questionNumber].answers[correctAnswerNumber];\n        const newTestResultArry = this.state.testResult;\n\n        if (submittedAnswer === correctAnswer) {\n          console.log('Correct Answer!');\n          newTestResultArry[questionNumber] = {\n            correct: 1,\n            answer: submittedAnswer\n          };\n          this.setState({\n            testResult: newTestResultArry\n          });\n          event.currentTarget.parentElement.classList.add('correct');\n        } else {\n          console.log('Incorrect Answer!!');\n          newTestResultArry[questionNumber] = {\n            correct: 0,\n            answer: submittedAnswer\n          };\n          this.setState({\n            testResult: newTestResultArry\n          });\n          event.currentTarget.parentElement.classList.add('wrong');\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TestLoad, {\n      returnTestQuestionArry: this.handleTestData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, `Test Your Knowledge of: need from state`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, this.createCards()));\n  }\n\n}","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/react_test_practice_app/frontend/src/containers/TestContainer.js"],"names":["React","TestLoad","TestCard","TestContainer","Component","state","testSubject","testDifficulty","testLength","testQuestions","testResult","handleTestData","testQuestionArry","setState","console","log","createCards","map","card","index","handleAnswerClick","event","questionNumber","target","getAttribute","submittedAnswer","correctAnswerNumber","correctAnswerIndex","correctAnswer","answers","newTestResultArry","correct","answer","currentTarget","parentElement","classList","add","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TestLoad from '../components/TestLoad'\nimport TestCard from '../components/TestCard'\n\nexport default class TestContainer extends React.Component {\n    \n    state = {\n        testSubject: \"\",\n        testDifficulty: \"\",\n        testLength: 0,\n        testQuestions: [],\n        testResult: []\n    }\n\n    handleTestData = (testQuestionArry, testSubject, testDifficulty, testLength) => {\n        this.setState({\n            testQuestions: testQuestionArry,\n            testSubject: testSubject,\n            testDifficulty: testDifficulty,\n            testLength: testLength\n        })\n        console.log('TestContainer State after fetch and create questions array:')\n        console.log(this.state)\n    }\n\n    createCards = () => {\n        return this.state.testQuestions.map((card, index) => {\n            \n            return (\n                < TestCard returnAnswerClick={this.handleAnswerClick} cardData={card} questionIndex={index} />\n            )\n        })\n    }\n\n    handleAnswerClick = (event) => {\n        const questionNumber = event.target.getAttribute('data-question')\n        const submittedAnswer = event.target.getAttribute('data-answer')\n        console.log(`state testresult array element: ${this.state.testResult}`)\n        if (!!this.state.testResult[questionNumber]) {\n            const correctAnswerNumber = this.state.testQuestions[questionNumber].correctAnswerIndex\n            const correctAnswer = this.state.testQuestions[questionNumber].answers[correctAnswerNumber]\n            const newTestResultArry = this.state.testResult\n\n            if (submittedAnswer === correctAnswer) {\n                console.log('Correct Answer!')\n                \n                newTestResultArry[questionNumber] = {\n                    correct: 1,\n                    answer: submittedAnswer\n                }\n\n                this.setState({testResult: newTestResultArry})\n                event.currentTarget.parentElement.classList.add('correct')\n            } else {\n                console.log('Incorrect Answer!!')\n                newTestResultArry[questionNumber] = {\n                    correct: 0,\n                    answer: submittedAnswer\n                }\n\n                this.setState({testResult: newTestResultArry})\n                event.currentTarget.parentElement.classList.add('wrong')\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                < TestLoad returnTestQuestionArry={this.handleTestData} />\n                <h2>{`Test Your Knowledge of: need from state`}</h2>\n                <div>\n                    {this.createCards()}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}