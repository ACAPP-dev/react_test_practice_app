{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/react_test_practice_app/frontend/src/components/Test.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nexport default class Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      console.log(`Button ${event.target.innerText} for question ${event.target.getAttribute('data-question')} clicked`);\n      console.log(this.props.testData);\n      console.log(event.target);\n      debugger;\n    };\n\n    this.state = {\n      testData: props.testData,\n      testResult: []\n    };\n  }\n\n  createTestCard(cardData, questionIndex) {\n    const randomNum = Math.floor(Math.random() * 4);\n    let questionObj = {};\n\n    switch (randomNum) {\n      case 0:\n        questionObj = {\n          answer: 0,\n          questions: [cardData.correct_answer, cardData.incorrect_answers[0], cardData.incorrect_answers[1], cardData.incorrect_answers[2]]\n        };\n        break;\n\n      case 1:\n        questionObj = {\n          answer: 1,\n          questions: [cardData.incorrect_answers[1], cardData.correct_answer, cardData.incorrect_answers[0], cardData.incorrect_answers[2]]\n        };\n        break;\n\n      case 2:\n        questionObj = {\n          answer: 2,\n          questions: [cardData.incorrect_answers[2], cardData.incorrect_answers[1], cardData.correct_answer, cardData.incorrect_answers[0]]\n        };\n        break;\n\n      case 3:\n        questionObj = {\n          answer: 3,\n          questions: [cardData.incorrect_answers[0], cardData.incorrect_answers[2], cardData.incorrect_answers[1], cardData.correct_answer]\n        };\n        break;\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      key: questionIndex,\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, cardData.question), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, questionObj.questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        \"data-question\": questionIndex,\n        onClick: this.handleClick,\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, index + 1), ' ', question);\n    }))));\n  }\n\n  render() {\n    console.log(this.props.testData);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, `Test Your Knowledge of: ${this.props.testData.category}`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, this.props.testData.testData.map((card, index) => this.createTestCard(card, index))));\n  }\n\n}","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/react_test_practice_app/frontend/src/components/Test.js"],"names":["React","Card","Button","ListGroup","Test","Component","constructor","props","handleClick","event","console","log","target","innerText","getAttribute","testData","state","testResult","createTestCard","cardData","questionIndex","randomNum","Math","floor","random","questionObj","answer","questions","correct_answer","incorrect_answers","question","map","index","render","category","card"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nexport default class Test extends React.Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            testData: props.testData,\n            testResult: []\n        }\n    }\n\n    createTestCard(cardData, questionIndex) {\n        const randomNum = Math.floor(Math.random() * 4)\n        let questionObj = {}\n\n        switch(randomNum) {\n            case 0:\n                questionObj = {answer: 0, \n                    questions: [\n                        cardData.correct_answer, \n                        cardData.incorrect_answers[0], \n                        cardData.incorrect_answers[1], \n                        cardData.incorrect_answers[2]\n                    ]\n                }\n                break;\n            case 1:\n                questionObj = {answer: 1, \n                    questions: [\n                        cardData.incorrect_answers[1],\n                        cardData.correct_answer, \n                        cardData.incorrect_answers[0],  \n                        cardData.incorrect_answers[2]\n                    ]\n                }\n            break;\n            case 2:\n                questionObj = {answer: 2, \n                    questions: [\n                        cardData.incorrect_answers[2],\n                        cardData.incorrect_answers[1],\n                        cardData.correct_answer, \n                        cardData.incorrect_answers[0]\n                    ]\n                }\n            break;\n            case 3:\n                questionObj = {answer: 3, \n                    questions: [\n                        cardData.incorrect_answers[0],\n                        cardData.incorrect_answers[2],\n                        cardData.incorrect_answers[1],\n                        cardData.correct_answer\n                    ]\n                }\n            break;\n        }\n        return (\n            <Card key={questionIndex} className='card'>\n                <Card.Body>\n                    <Card.Title>{cardData.question}</Card.Title>\n                    <ListGroup>\n                        {questionObj.questions.map((question, index) => {\n                            return(\n                                <ListGroup.Item>\n                                    <Button data-question={questionIndex} onClick={this.handleClick} variant='secondary'>{index + 1}</Button>{' '}\n                                    {question}\n                                </ListGroup.Item>)\n                        })}\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        )\n    }\n\n    handleClick = (event) => {\n        console.log(`Button ${event.target.innerText} for question ${event.target.getAttribute('data-question')} clicked`)\n        console.log(this.props.testData)\n        console.log(event.target)\n        debugger\n    }\n\n    render() {\n        console.log(this.props.testData)\n        return (\n            <>\n                <h2>{`Test Your Knowledge of: ${this.props.testData.category}`}</h2>\n                <div>\n                    {this.props.testData.testData.map((card, index) => this.createTestCard(card, index))}\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}